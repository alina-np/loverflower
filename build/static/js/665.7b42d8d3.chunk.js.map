{"version":3,"file":"static/js/665.7b42d8d3.chunk.js","mappings":"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","sources":["features/SortPrice/ui/SortPrice.tsx","features/FiltrCategory/ui/FiltrCategory.tsx","shared/lib/hooks/useDebounce.ts","features/FiltrPrice/ui/FiltrPrice.tsx","widgets/SidePanelCatalog/ui/SidePanel.tsx","pages/CatalogPage/ui/CatalogPage.tsx","shared/lib/hooks/useForma.ts","shared/lib/hooks/useFiltr.ts","shared/lib/hooks/useBtnMore.ts","shared/lib/hooks/useBtnClose.ts","shared/lib/hooks/useAddInCart.ts"],"sourcesContent":["import { RadioButton } from \"shared/ui/Radiobutton/RadioButton\";\r\nimport { setSortPice } from \"shared/lib/redux/reducer/filtrSlice\";\r\nimport { useAppDispatch } from \"shared/lib/redux/store\";\r\n\r\nexport function SortPrice() {\r\n  const dispatch = useAppDispatch();\r\n  const handleSortChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { id } = event.target;\r\n    dispatch(setSortPice(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-mint title-three\">Сортировать</h3>\r\n      <div className=\"sortPrice\" onChange={handleSortChange}>\r\n        <RadioButton\r\n          id=\"upPrice\"\r\n          name=\"sortList\"\r\n          value=\"upPrice\"\r\n          text=\"По возрастанию цены\"\r\n        />\r\n        <RadioButton\r\n          id=\"downPrice\"\r\n          name=\"sortList\"\r\n          value=\"downPrice\"\r\n          text=\"По убыванию цены\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { RadioButton } from \"shared/ui\";\r\nimport { setCategory } from \"shared/lib/redux/reducer/filtrSlice\";\r\nimport { useAppDispatch } from \"shared/lib/redux/store\";\r\n\r\nexport function FiltrCategory() {\r\n  const dispatch = useAppDispatch();\r\n  const handleCategoryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { id } = event.target;\r\n    dispatch(setCategory(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-mint title-three\">Категория</h3>\r\n      <div className=\"filtrCategory\" onChange={handleCategoryChange}>\r\n        <RadioButton id=\"new\" name=\"category\" value=\"new\" text=\"Новинка\" />\r\n        <RadioButton id=\"hit\" name=\"category\" value=\"hit\" text=\"Популярное\" />\r\n        <RadioButton id=\"sale\" name=\"category\" value=\"sale\" text=\"Распродажа\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const useDebounce = (func: Function, delay: number) => {\r\n  let timeoutId: NodeJS.Timeout;\r\n  return function (this: any, ...args: any[]) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => {\r\n      func.apply(this, args);\r\n    }, delay);\r\n  };\r\n};\r\n","import \"./style.css\";\r\nimport { Input } from \"shared/ui\";\r\nimport { setFiltrPriceMin, setFiltrPriceMax } from \"shared/lib/redux/reducer/filtrSlice\";\r\nimport { useDebounce } from \"shared/lib/hooks/useDebounce\";\r\nimport { useAppDispatch } from \"shared/lib/redux/store\";\r\n\r\nexport function FiltrPrice() {\r\n  const dispatch = useAppDispatch();\r\n  const handlePriceRangeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { id, value } = event.target;\r\n    let valueNum = Number(value);\r\n    if(id ==='minPrice') dispatch(setFiltrPriceMin({[id]: valueNum}));\r\n    if(id ==='maxPrice') dispatch(setFiltrPriceMax({[id]: valueNum}));\r\n  };\r\n\r\n  const debounceHandlePriceRangeChange = useDebounce(handlePriceRangeChange, 700)\r\n  \r\n  return (\r\n    <div>\r\n      <h3 className=\"text-mint title-three\">Стоимость</h3>\r\n      <div className=\"filtrPrice\" onChange={debounceHandlePriceRangeChange}>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"minPrice\"\r\n          text=\"От\"\r\n        />\r\n        <Input\r\n          type=\"text\"\r\n          id=\"maxPrice\"\r\n          text=\"До\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./style.css\";\r\nimport { Button } from \"shared/ui\";\r\nimport { SortPrice } from \"features/SortPrice\";\r\nimport { FiltrCategory } from \"features/FiltrCategory\";\r\nimport { FiltrPrice } from \"features/FiltrPrice\";\r\n\r\ninterface SidePanelProps {\r\n  resetFilters: any;\r\n}\r\n\r\nexport function SidePanel({ resetFilters }: SidePanelProps) {\r\n  return (\r\n    <div className=\"catalogFiltr filter\">\r\n      <SortPrice />\r\n      <FiltrCategory />\r\n      <FiltrPrice />\r\n      <Button\r\n        text=\"Сбросить фильтры\"\r\n        className=\"btn catalogFiltr__btn\"\r\n        onClick={resetFilters}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import \"./style.css\";\r\nimport { catalog } from \"shared/model/arr\";\r\nimport { Card, Button, Breadcrumbs } from \"shared/ui\";\r\nimport { SidePanel } from \"widgets/SidePanelCatalog\";\r\nimport { item } from \"types/types\";\r\nimport { useAddInCart, useFiltr, useBtnMore } from \"shared/lib\";\r\n\r\nfunction CatalogPage() {\r\n  const [filteredList, resetFilters] = useFiltr(catalog);\r\n  const [sliceArr, loadMore] = useBtnMore(filteredList, 15);\r\n  const arrPaths = [{ namePage: \"Каталог букетов\" }];\r\n  const addInCart = useAddInCart();\r\n\r\n  return (\r\n    <div className=\"catalog\">\r\n      <div className=\"container\">\r\n        <Breadcrumbs arr={arrPaths} />\r\n        <h1 className=\"inner__title-one\">Каталог букетов</h1>\r\n        <div className=\"catalogContainer\">\r\n          <SidePanel resetFilters={resetFilters} />\r\n          <div className=\"catalogMain\">\r\n            <div className=\"catalogList\">\r\n              {sliceArr.map((item: item, num: number) => (\r\n                <Card\r\n                  id={num}\r\n                  key={num}\r\n                  cls=\"card\"\r\n                  image={item.img}\r\n                  title={item.title}\r\n                >\r\n                  {item.mark ===\"new\" && <div className=\"mark new\">New</div>}\r\n                  {item.mark ===\"sale\" && <div className=\"mark sale\">sale</div>}\r\n                  {item.mark ===\"hit\" && <div className=\"mark hit\">hit</div>}\r\n                  <p className=\"price card__price\">\r\n                    <span>{item.price}</span> ₽\r\n                  </p>\r\n                  <button className=\"btn-opacity\" onClick={addInCart}>В корзину</button>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n            {filteredList.length > sliceArr.length && (\r\n              <Button\r\n                text=\"Показать еще\"\r\n                className=\"btn\"\r\n                onClick={() => loadMore()}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        text=\"\"\r\n        className=\"btn-circle\"\r\n        onClick={() => window.scrollTo({ top: 0, behavior: \"smooth\" })}\r\n      />\r\n      <img\r\n        src={require(\"../../../assets/images/bg-img/catalog-redFlower-left.png\")}\r\n        className=\"catalog__flower catalog__flower-one\"\r\n      />\r\n      <img\r\n        src={require(\"../../../assets/images/bg-img/catalog-redFlower-right.png\")}\r\n        className=\"catalog__flower catalog__flower-two\"\r\n      />\r\n      <div className=\"catalog__green-two green blur\"></div>\r\n      <div className=\"catalog__green-three green blur\"></div>\r\n      <div className=\"catalog__pink-one pink blur\"></div>\r\n      <div className=\"catalog__pink-two pink blur\"></div>\r\n      <div className=\"catalog__pink-three pink blur\"></div>\r\n      <div className=\"catalog__pink-four pink blur\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CatalogPage;","import { SubmitHandler, useForm } from 'react-hook-form';\r\nimport { Fields } from 'types/types';\r\n\r\nexport const useForma = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm<Fields>({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<Fields> = (data, event) => {\r\n    const successMess = event?.target.querySelector('.successSend');\r\n    if (successMess) successMess.classList.add('visible');\r\n\r\n    console.log(data);\r\n    reset();\r\n  };\r\n\r\n  return {\r\n    register,\r\n    errors,\r\n    handleSubmit: handleSubmit(onSubmit),\r\n  };\r\n};","import { item } from \"types/types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setCategory, setSortPice, setFiltrPriceMin, setFiltrPriceMax } from \"../redux/reducer/filtrSlice\";\r\nimport { RootState, useAppDispatch } from \"../redux/store\";\r\n\r\nconst SORT_BY_UP_PRICE = \"upPrice\";\r\nconst SORT_BY_DOWN_PRICE = \"downPrice\"; \r\n\r\nexport const useFiltr = (arr: item[]) => {\r\n  const dispatch = useAppDispatch();\r\n  let category = useSelector((state: RootState) => state.filter.category);\r\n  let sortPrice = useSelector((state: RootState) => state.filter.sortPrice);\r\n  let filtrPriceMin = useSelector((state: any) => state.filter.filtrPriceMin) || { minPrice: 0 };\r\n  const filtrPriceMax = useSelector((state: any) => state.filter.filtrPriceMax) || { maxPrice: 10000000 };\r\n\r\n  const filteredList = arr\r\n    .filter((item: item) => {\r\n      return (\r\n        filtrPriceMin.minPrice <= item.price &&\r\n        item.price <= filtrPriceMax.maxPrice &&\r\n        (category ===\"\" || category ===item.mark)\r\n      );\r\n    })\r\n    .sort((a: item, b: item) => {\r\n      if (sortPrice === SORT_BY_UP_PRICE) return a.price - b.price;\r\n      if (sortPrice === SORT_BY_DOWN_PRICE) return b.price - a.price;\r\n      return 0;\r\n    });\r\n  const resetFilters = () => {\r\n      const inputElements = document.querySelectorAll<HTMLInputElement>('input[type=\"text\"]'),\r\n      radioElements = document.querySelectorAll<HTMLInputElement>('input[type=\"radio\"]');\r\n      \r\n      inputElements.forEach((input) => (input.value = \"\"));\r\n      radioElements.forEach((radio) => (radio.checked = false));\r\n      \r\n      dispatch(setCategory(''));\r\n      dispatch(setSortPice(''));\r\n      dispatch(setFiltrPriceMin(0));\r\n      dispatch(setFiltrPriceMax(0));\r\n  };\r\n\r\n  return [filteredList, resetFilters];\r\n};\r\n","import { useState } from \"react\";\r\nimport { item } from \"types/types\";\r\n\r\nexport const useBtnMore = (arr: any, quanityElem: number): [item[], () => void] => {\r\n  const [quanity, setQuanity] = useState(quanityElem);\r\n  const sliceArr = arr.slice(0, quanity);\r\n\r\n  const loadMore = () => setQuanity(quanityElem + quanity);\r\n  return [sliceArr, loadMore];\r\n};","import { useEffect } from \"react\";\r\n\r\nexport const useBtnClose = (setActive: Function) => {\r\n  useEffect(() => {\r\n    const close = (e: KeyboardEvent) => {\r\n      if (e.key === \"Escape\") setActive(false);\r\n    };\r\n    window.addEventListener(\"keydown\", close);\r\n    return () => window.removeEventListener(\"keydown\", close);\r\n  }, [setActive]);\r\n};\r\n","import { addProduct } from \"shared/lib/redux/reducer/cartSlice\";\r\nimport { useAppDispatch } from \"../redux/store\";\r\n\r\nexport const useAddInCart = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const getItemDetails = (elem: HTMLElement | null) => {\r\n    const id = Number(elem?.id);\r\n    const title = elem?.querySelector(\"h3\")?.textContent ?? null;\r\n    const price = Number(elem?.querySelector(\".price span\")?.textContent);\r\n    const img = elem?.querySelector(\"img\")?.src ?? null;\r\n    return { id, title, price, img };\r\n  };\r\n\r\n  const updateButtonText = (btn: HTMLButtonElement | null, text: string, timeout: number) => {\r\n    if (btn) {\r\n      btn.textContent = text;\r\n      setTimeout(() => btn.textContent = \"В корзину\", timeout);\r\n    }\r\n  };\r\n  \r\n  const addInCart: React.MouseEventHandler<HTMLElement> = (event) => {\r\n    const elem = (event.target as HTMLElement).parentElement?.parentElement;\r\n    if (!elem) return;\r\n    const item = getItemDetails(elem);\r\n    const btn = elem.querySelector(\"button\") as HTMLButtonElement | null;\r\n    updateButtonText(btn, \"Добавлено в корзину\", 2000);\r\n    dispatch(addProduct(item));\r\n  };\r\n  return addInCart;\r\n};\r\n"],"names":["SortPrice","dispatch","useAppDispatch","_jsxs","children","_jsx","className","onChange","event","id","target","setSortPice","RadioButton","name","value","text","FiltrCategory","setCategory","useDebounce","func","delay","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","this","FiltrPrice","debounceHandlePriceRangeChange","valueNum","Number","setFiltrPriceMin","setFiltrPriceMax","Input","type","SidePanel","_ref","resetFilters","Button","onClick","filteredList","useFiltr","catalog","sliceArr","loadMore","useBtnMore","addInCart","useAddInCart","Breadcrumbs","arr","namePage","map","item","num","Card","cls","image","img","title","mark","price","window","scrollTo","top","behavior","src","require","useForma","register","formState","errors","handleSubmit","reset","useForm","mode","onSubmit","data","successMess","querySelector","classList","add","console","log","category","useSelector","state","filter","sortPrice","filtrPriceMin","minPrice","filtrPriceMax","maxPrice","sort","a","b","inputElements","document","querySelectorAll","radioElements","forEach","input","radio","checked","quanityElem","quanity","setQuanity","useState","slice","useBtnClose","setActive","useEffect","close","e","key","addEventListener","removeEventListener","_parentElement","elem","parentElement","_elem$querySelector$t","_elem$querySelector","_elem$querySelector2","_elem$querySelector$s","_elem$querySelector3","textContent","getItemDetails","updateButtonText","btn","timeout","addProduct"],"sourceRoot":""}