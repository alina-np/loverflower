{"version":3,"file":"static/js/85.4e4c2143.chunk.js","mappings":"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","sources":["features/Forma/ui/Forma.tsx","pages/OrderPage/ui/OrderPage.tsx","shared/lib/hooks/useForma.ts","shared/lib/hooks/useFiltr.ts","shared/lib/hooks/useBtnMore.ts","shared/lib/hooks/useBtnClose.ts","shared/lib/hooks/useAddInCart.ts"],"sourcesContent":["import \"./style.css\";\r\nimport { useForma } from \"shared/lib\";\r\nimport { Button, RadioButton } from \"shared/ui\";\r\n\r\nexport function Forma() {\r\n  const { register, errors, handleSubmit } = useForma();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"forma__top\">\r\n        <h2 className=\"title-two forma__title\">\r\n          Остались <span>Вопросы?</span>\r\n        </h2>\r\n        <p>\r\n          Отправьте ваш вопрос, заказ, предложение или жалобу через форму\r\n          обратной связи, и наш специалист свяжется с вами в течение 15 минут.\r\n        </p>\r\n      </div>\r\n      <div className=\"forma__bottom\">\r\n        <p className=\"forma__text text\">have any questions?</p>\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ваше имя\"\r\n              className=\"input\"\r\n              {...register(\"name\", {\r\n                minLength: {\r\n                  value: 2,\r\n                  message: \"Поле не должно содержать меньше 2-х символов\",\r\n                },\r\n                maxLength: {\r\n                  value: 30,\r\n                  message: \"Поле не должно содержать больше 30 символов\",\r\n                },\r\n              })}\r\n            />\r\n            {errors?.name && (\r\n              <div className=\"form__error\">{errors.name.message}</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"tel\"\r\n              placeholder=\"Номер телефона\"\r\n              className=\"input\"\r\n              {...register(\"tel\", {\r\n                required: \"Поле, обязательное для заполнения\",\r\n                pattern: {\r\n                  value: /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/,\r\n                  message: \"Номер введен не корректно\",\r\n                },\r\n              })}\r\n            />\r\n            {errors?.tel && (\r\n              <div className=\"form__error\">{errors.tel.message}</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <textarea\r\n              placeholder=\"Сообщение\"\r\n              className=\"textarea\"\r\n              {...register(\"mess\", {\r\n                minLength: {\r\n                  value: 5,\r\n                  message: \"Поле не должно содержать меньше 5 символов\",\r\n                },\r\n                maxLength: {\r\n                  value: 1000,\r\n                  message: \"Поле не должно содержать больше 30 символов\",\r\n                },\r\n              })}\r\n            ></textarea>\r\n            {errors?.mess && (\r\n              <div className=\"form__error\">{errors.mess.message}</div>\r\n            )}\r\n          </div>\r\n          <Button text=\"Отправить\" className=\"btn\"></Button>\r\n          <p className=\"successSend\">Ваше сообщение успешно отправлено</p>\r\n          <p>\r\n            Нажимая на кнопку «Отправить», я даю свое согласие на обработку\r\n            персональных данных, в соответствии с &nbsp;\r\n            <a href=\"#\" target=\"_blank\">\r\n              Политикой конфиденциальности\r\n            </a>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormaOrderCall() {\r\n  const { register, errors, handleSubmit } = useForma();\r\n  return (\r\n    <div className=\"formCall\">\r\n      <h2 className=\"title-two forma__title\">Заказать звонок</h2>\r\n      <p>\r\n        Впишите свои данные, и мы свяжемся с Вами. Ваши данные ни при каких\r\n        обстоятельствах не будут переданы третьим лицам.\r\n      </p>\r\n      <form className=\"formCall__forma form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Ваше имя\"\r\n            className=\"input\"\r\n            {...register(\"name\", {\r\n              minLength: {\r\n                value: 2,\r\n                message: \"Поле не должно содержать меньше 2-х символов\",\r\n              },\r\n              maxLength: {\r\n                value: 30,\r\n                message: \"Поле не должно содержать больше 30 символов\",\r\n              },\r\n            })}\r\n          />\r\n          {errors?.name && (\r\n            <div className=\"form__error\">{errors.name.message}</div>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Номер телефона\"\r\n            className=\"input\"\r\n            {...register(\"tel\", {\r\n              required: \"Поле, обязательное для заполнения\",\r\n              pattern: {\r\n                value: /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/,\r\n                message: \"Номер введен не корректно\",\r\n              },\r\n            })}\r\n          />\r\n          {errors?.tel && (\r\n            <div className=\"form__error\">{errors.tel.message}</div>\r\n          )}\r\n        </div>\r\n        <Button text=\"Отправить\" className=\"btn\"></Button>\r\n        <p className=\"successSend\">Мы получили Ваш запрос и свяжемся с Вами в ближайшее время</p>\r\n        <p>\r\n          Нажимая на кнопку «Отправить», я даю свое согласие на обработку\r\n          персональных данных, в соответствии с &nbsp;\r\n          <a href=\"#\" target=\"_blank\">\r\n            Политикой конфиденциальности\r\n          </a>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormaOrder() {\r\n  const { register, errors, handleSubmit } = useForma();\r\n  return (\r\n    <div className=\"formOrder\">\r\n      <form className=\"formOrder__forma form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <h3 className=\"text-mint\">Контактные данные</h3>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Ваше имя\"\r\n              className=\"input\"\r\n              {...register(\"name\", {\r\n                required: \"Поле, обязательное для заполнения\",\r\n                minLength: {\r\n                  value: 2,\r\n                  message: \"Поле не должно содержать меньше 2-х символов\",\r\n                },\r\n                maxLength: {\r\n                  value: 30,\r\n                  message: \"Поле не должно содержать больше 30 символов\",\r\n                },\r\n              })}\r\n            />\r\n            {errors?.name && (\r\n              <div className=\"form__error\">{errors.name.message}</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"tel\"\r\n              placeholder=\"Номер телефона\"\r\n              className=\"input\"\r\n              {...register(\"tel\", {\r\n                required: \"Поле, обязательное для заполнения\",\r\n                pattern: {\r\n                  value: /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/,\r\n                  message: \"Номер введен не корректно\",\r\n                },\r\n              })}\r\n            />\r\n            {errors?.tel && (\r\n              <div className=\"form__error\">{errors.tel.message}</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Имя получателя\"\r\n              className=\"input\"\r\n              {...register(\"nameTwo\", {\r\n                minLength: {\r\n                  value: 2,\r\n                  message: \"Поле не должно содержать меньше 2-х символов\",\r\n                },\r\n                maxLength: {\r\n                  value: 30,\r\n                  message: \"Поле не должно содержать больше 30 символов\",\r\n                },\r\n              })}\r\n            />\r\n            {errors?.nameTwo && (\r\n              <div className=\"form__error\">{errors.nameTwo.message}</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"tel\"\r\n              placeholder=\"Номер телефона получателя\"\r\n              className=\"input\"\r\n              {...register(\"telTwo\", {\r\n                pattern: {\r\n                  value: /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/,\r\n                  message: \"Номер введен не корректно\",\r\n                },\r\n              })}\r\n            />\r\n            {errors?.telTwo && (\r\n              <div className=\"form__error\">{errors.telTwo.message}</div>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Комментарий к заказу\"\r\n              className=\"input\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-mint\">Доставка</h3>\r\n          <div>\r\n            <input type=\"text\" placeholder=\"Введите адрес\" className=\"input\" />\r\n          </div>\r\n          <h3 className=\"text-mint\">Оплата</h3>\r\n          <div>\r\n            {\" \"}\r\n            <RadioButton\r\n              id=\"cart\"\r\n              name=\"pay\"\r\n              value=\"cart\"\r\n              text=\"Банковская карта\"\r\n            />\r\n            <RadioButton id=\"money\" name=\"pay\" value=\"money\" text=\"Наличными\" />\r\n            <RadioButton\r\n              id=\"google\"\r\n              name=\"pay\"\r\n              value=\"google\"\r\n              text=\"Google pay\"\r\n            />\r\n            <RadioButton\r\n              id=\"score\"\r\n              name=\"pay\"\r\n              value=\"score\"\r\n              text=\"С расчетного счета\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <Button text=\"К оплате\" className=\"btn\"></Button>\r\n        <p>\r\n          Нажимая на кнопку «К Оплате», я даю свое согласие на обработку\r\n          персональных данных, в соответствии с{\" \"}\r\n          <a href=\"#\" target=\"_blank\">\r\n            Политикой конфиденциальности\r\n          </a>\r\n          , а так же ознакомлен с условиями оплаты и доставки\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"./style.css\";\r\nimport { Breadcrumbs } from \"shared/ui\";\r\nimport { FormaOrder } from \"features/Forma\";\r\n\r\nfunction OrderPage() {\r\n  const arrPaths = [{ namePage: \"Оформление заказа\" }];\r\n\r\n  return (\r\n    <section className=\"order\">\r\n      <img\r\n        src={require(\"../../../assets/images/bg-img/order-left.png\")}\r\n        className=\"order__flower order__flower-one\"\r\n      />\r\n      <img\r\n        src={require(\"../../../assets/images/bg-img/order-right.png\")}\r\n        className=\"order__flower order__flower-two\"\r\n      />\r\n      <div className=\"order__green-one green blur\"></div>\r\n      <div className=\"order__green-two green blur\"></div>\r\n      <div className=\"order__green-three green blur\"></div>\r\n      <div className=\"order__pink-one pink blur\"></div>\r\n      <div className=\"order__pink-two pink blur\"></div>\r\n      <div className=\"order__pink-three pink blur\"></div>\r\n      <div className=\"order__pink-four pink blur\"></div>\r\n      <div className=\"container\">\r\n        <Breadcrumbs arr={arrPaths} />\r\n        <h1 className=\"inner__title-one\">Оформление заказа</h1>\r\n        <FormaOrder />\r\n        <div className=\"order__text text\">lover flower</div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default OrderPage;","import { SubmitHandler, useForm } from 'react-hook-form';\r\nimport { Fields } from 'types/types';\r\n\r\nexport const useForma = () => {\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm<Fields>({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<Fields> = (data, event) => {\r\n    const successMess = event?.target.querySelector('.successSend');\r\n    if (successMess) successMess.classList.add('visible');\r\n\r\n    console.log(data);\r\n    reset();\r\n  };\r\n\r\n  return {\r\n    register,\r\n    errors,\r\n    handleSubmit: handleSubmit(onSubmit),\r\n  };\r\n};","import { item } from \"types/types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setCategory, setSortPice, setFiltrPriceMin, setFiltrPriceMax } from \"../redux/reducer/filtrSlice\";\r\nimport { RootState, useAppDispatch } from \"../redux/store\";\r\n\r\nconst SORT_BY_UP_PRICE = \"upPrice\";\r\nconst SORT_BY_DOWN_PRICE = \"downPrice\"; \r\n\r\nexport const useFiltr = (arr: item[]) => {\r\n  const dispatch = useAppDispatch();\r\n  let category = useSelector((state: RootState) => state.filter.category);\r\n  let sortPrice = useSelector((state: RootState) => state.filter.sortPrice);\r\n  let filtrPriceMin = useSelector((state: any) => state.filter.filtrPriceMin) || { minPrice: 0 };\r\n  const filtrPriceMax = useSelector((state: any) => state.filter.filtrPriceMax) || { maxPrice: 10000000 };\r\n\r\n  const filteredList = arr\r\n    .filter((item: item) => {\r\n      return (\r\n        filtrPriceMin.minPrice <= item.price &&\r\n        item.price <= filtrPriceMax.maxPrice &&\r\n        (category ===\"\" || category ===item.mark)\r\n      );\r\n    })\r\n    .sort((a: item, b: item) => {\r\n      if (sortPrice === SORT_BY_UP_PRICE) return a.price - b.price;\r\n      if (sortPrice === SORT_BY_DOWN_PRICE) return b.price - a.price;\r\n      return 0;\r\n    });\r\n  const resetFilters = () => {\r\n      const inputElements = document.querySelectorAll<HTMLInputElement>('input[type=\"text\"]'),\r\n      radioElements = document.querySelectorAll<HTMLInputElement>('input[type=\"radio\"]');\r\n      \r\n      inputElements.forEach((input) => (input.value = \"\"));\r\n      radioElements.forEach((radio) => (radio.checked = false));\r\n      \r\n      dispatch(setCategory(''));\r\n      dispatch(setSortPice(''));\r\n      dispatch(setFiltrPriceMin(0));\r\n      dispatch(setFiltrPriceMax(0));\r\n  };\r\n\r\n  return [filteredList, resetFilters];\r\n};\r\n","import { useState } from \"react\";\r\nimport { item } from \"types/types\";\r\n\r\nexport const useBtnMore = (arr: any, quanityElem: number): [item[], () => void] => {\r\n  const [quanity, setQuanity] = useState(quanityElem);\r\n  const sliceArr = arr.slice(0, quanity);\r\n\r\n  const loadMore = () => setQuanity(quanityElem + quanity);\r\n  return [sliceArr, loadMore];\r\n};","import { useEffect } from \"react\";\r\n\r\nexport const useBtnClose = (setActive: Function) => {\r\n  useEffect(() => {\r\n    const close = (e: KeyboardEvent) => {\r\n      if (e.key === \"Escape\") setActive(false);\r\n    };\r\n    window.addEventListener(\"keydown\", close);\r\n    return () => window.removeEventListener(\"keydown\", close);\r\n  }, [setActive]);\r\n};\r\n","import { addProduct } from \"shared/lib/redux/reducer/cartSlice\";\r\nimport { useAppDispatch } from \"../redux/store\";\r\n\r\nexport const useAddInCart = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const getItemDetails = (elem: HTMLElement | null) => {\r\n    const id = Number(elem?.id);\r\n    const title = elem?.querySelector(\"h3\")?.textContent ?? null;\r\n    const price = Number(elem?.querySelector(\".price span\")?.textContent);\r\n    const img = elem?.querySelector(\"img\")?.src ?? null;\r\n    return { id, title, price, img };\r\n  };\r\n\r\n  const updateButtonText = (btn: HTMLButtonElement | null, text: string, timeout: number) => {\r\n    if (btn) {\r\n      btn.textContent = text;\r\n      setTimeout(() => btn.textContent = \"В корзину\", timeout);\r\n    }\r\n  };\r\n  \r\n  const addInCart: React.MouseEventHandler<HTMLElement> = (event) => {\r\n    const elem = (event.target as HTMLElement).parentElement?.parentElement;\r\n    if (!elem) return;\r\n    const item = getItemDetails(elem);\r\n    const btn = elem.querySelector(\"button\") as HTMLButtonElement | null;\r\n    updateButtonText(btn, \"Добавлено в корзину\", 2000);\r\n    dispatch(addProduct(item));\r\n  };\r\n  return addInCart;\r\n};\r\n"],"names":["Forma","register","errors","handleSubmit","useForma","_jsxs","className","children","_jsx","onSubmit","type","placeholder","minLength","value","message","maxLength","name","required","pattern","tel","mess","Button","text","href","target","FormaOrderCall","FormaOrder","nameTwo","telTwo","RadioButton","id","src","require","Breadcrumbs","arr","namePage","formState","reset","useForm","mode","data","event","successMess","querySelector","classList","add","console","log","useFiltr","dispatch","useAppDispatch","category","useSelector","state","filter","sortPrice","filtrPriceMin","minPrice","filtrPriceMax","maxPrice","item","price","mark","sort","a","b","resetFilters","inputElements","document","querySelectorAll","radioElements","forEach","input","radio","checked","setCategory","setSortPice","setFiltrPriceMin","setFiltrPriceMax","useBtnMore","quanityElem","quanity","setQuanity","useState","slice","loadMore","useBtnClose","setActive","useEffect","close","e","key","window","addEventListener","removeEventListener","useAddInCart","_parentElement","elem","parentElement","_elem$querySelector$t","_elem$querySelector","_elem$querySelector2","_elem$querySelector$s","_elem$querySelector3","Number","title","textContent","img","getItemDetails","updateButtonText","btn","timeout","setTimeout","addProduct"],"sourceRoot":""}